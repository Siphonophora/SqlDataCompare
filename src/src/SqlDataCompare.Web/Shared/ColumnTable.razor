<div class="row">
    <div class="col-xl">
        <table class="table table-striped table-sm">
            <tr>
                <th>Key Name</th>
                <th>Key</th>
                <th>Sort Descending</th>
            </tr>

            @foreach (var col in OrderedColumns.Invoke().Where(x => x.IsKey))
            {
                <tr @key="col.ColumnName">
                    <td>
                        <button class="btn-unformatted" @onclick="(() => EditIndex(col, false))">▼</button>
                        <button class="btn-unformatted" @onclick="(() => EditIndex(col, true))">▲</button>

                        @col.ColumnName
                    </td>
                    <td>
                        <Checkbox Value="@col.IsKey"
                                  Update="@(() => UpdateKey(col))" />
                    </td>
                    <td>
                        <Checkbox Value="@col.SortDescending"
                                  Update="@(() => UpdateSort(col))" />
                    </td>
                </tr>
            }
        </table>
    </div>
    <div class="col-xl">
        <table class="table table-striped table-sm">
            <tr>
                <th>Column Name</th>
                <th>Key</th>
                <th>Sort Descending</th>
            </tr>

            @foreach (var col in OrderedColumns.Invoke().Where(x => !x.IsKey))
            {
                <tr @key="col.ColumnName">

                    <td>
                        <button class="btn-unformatted" @onclick="(() => EditIndex(col, false))">▼</button>
                        <button class="btn-unformatted" @onclick="(() => EditIndex(col, true))">▲</button>
                        @col.ColumnName
                    </td>
                    <td>
                        <Checkbox Value="@col.IsKey"
                                  Update="@(() => UpdateKey(col))" />
                    </td>
                    <td>
                        <Checkbox Value="@col.SortDescending"
                                  Update="@(() => UpdateSort(col))" />
                    </td>
                </tr>
            }
        </table>
    </div>
</div>

@code{
    [Parameter] public Func<IOrderedEnumerable<ComparableColumn>> OrderedColumns { get; set; }

    /// <summary>
    /// Action called on any edit.
    /// </summary>
    [Parameter] public Action Changed { get; set; }

    private void UpdateKey(ComparableColumn col)
    {
        col.IsKey = !col.IsKey;
        Changed.Invoke();
    }

    private void UpdateSort(ComparableColumn col)
    {
        col.SortDescending = !col.SortDescending;
        Changed.Invoke();
    }

    private void EditIndex(ComparableColumn col, bool moveUp)
    {
        var cols = OrderedColumns.Invoke().ToArray();
        for (int i = cols.Count() - 1; i >= 0; i--)
        {
            cols[i].ColumnOrder = i * 2;
        }

        col.ColumnOrder += 3 * (moveUp ? -1 : 1);
        Changed.Invoke();
    }
}
